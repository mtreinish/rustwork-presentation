import seaborn as sns
import matplotlib.pyplot as plt

sns.set()

shortest_path_time = [
    0.0012737899996864144,
    0.00015620300109731033,
    0.00014545299927704036,
    0.00012952300312463194,
    0.0001550699998915661,
    0.00016864600183907896,
    0.00039045200173859484,
    0.0001822119993448723,
    0.0003112640006293077,
    0.0003389859994058497,
    0.0002741839998634532,
    0.0005319580013747327,
    0.0004765839985338971,
    0.0005539689991564956,
    0.0007560480007668957,
    0.0009019319986691698,
    0.0011478429987619165,
    0.0014705389985465445,
    0.0016446049994556233,
    0.003099503999692388,
    0.0018062279996229336,
    0.0013346439991437364,
    0.00159908999921754,
    0.0018760689999908209,
    0.002669698002137011,
    0.004773413998918841,
    0.00565677099802997,
    0.008356144997378578,
    0.01051901199753047,
    0.01473742500093067,
    0.020803724000870716,
    0.029104956000082893,
    0.04292664299646276,
    0.06569628600118449,
    0.08589603599830298,
    0.1252129780004907,
    0.17695884500062675,
    0.25197909100097604,
    0.37640101500073797,
    0.5338840769982198,
    0.8157152339990716,
    1.247895131000405,
    1.9169040090018825,
    3.3363638970004104,
    6.197884838999016,
    10.863763622997794,
    20.11332888200195,
    34.037030212999525,
    52.925429422997695,
    95.52122611199957,
]

construct_time = [
    2.9334998544072732e-05,
    9.21700120670721e-06,
    8.686001820024103e-06,
    6.081001629354432e-06,
    9.428000339539722e-06,
    8.356000762432814e-06,
    1.3114000466885045e-05,
    1.586900179972872e-05,
    1.568999869050458e-05,
    2.3515000066254288e-05,
    3.523700070218183e-05,
    2.916500307037495e-05,
    3.5266002669231966e-05,
    5.023500125389546e-05,
    5.661699833581224e-05,
    7.175400241976604e-05,
    9.305500134360045e-05,
    0.00011974500012001954,
    0.00012907199925393797,
    0.00014997099788160995,
    0.00020221899831085466,
    0.0001952559978235513,
    0.0002698159987630788,
    0.00029770800028927624,
    0.00035213099909015,
    0.000412302997574443,
    0.0006470039988926146,
    0.0007498069971916266,
    0.000796112999523757,
    0.0011922269986825995,
    0.0019077690012636594,
    0.001406038001732668,
    0.0025885459981509484,
    0.004142970999964746,
    0.004299454998545116,
    0.004899420997389825,
    0.0062863719977031,
    0.007634051002241904,
    0.009094950997678097,
    0.012453269999241456,
    0.01384793599936529,
    0.01622075799969025,
    0.02167799399830983,
    0.021813879000546876,
    0.02899953800078947,
    0.04162084400013555,
    0.06309025700102211,
    0.06207487199935713,
    0.0711051519974717,
    0.11987469399900874,
]
num_nodes = [
    10,
    12,
    15,
    18,
    23,
    28,
    35,
    43,
    54,
    67,
    82,
    102,
    126,
    156,
    193,
    238,
    294,
    364,
    449,
    555,
    686,
    848,
    1048,
    1294,
    1599,
    1976,
    2442,
    3017,
    3727,
    4605,
    5689,
    7029,
    8685,
    10730,
    13257,
    16378,
    20235,
    25001,
    30888,
    38162,
    47148,
    58251,
    71968,
    88915,
    109854,
    135722,
    167683,
    207169,
    255954,
    316227,
]


plt.loglog(num_nodes, shortest_path_time)
plt.ylabel("Time (sec.)")
plt.xlabel("Number of nodes")
plt.title("Time to compute all pairs of shortest paths with Dijkstra's Algorithm")
plt.tight_layout()
plt.savefig("shortest_path.png", dpi=900)

plt.figure()
plt.semilogx(num_nodes, construct_time)
plt.title("Time to construct a random Barab√°si Albert graph")
plt.ylabel("Time (sec.)")
plt.xlabel("Number of nodes")
plt.tight_layout()
plt.savefig("albert-graph_time.png", dpi=900)
