import seaborn as sns
import matplotlib.pyplot as plt

sns.set()

shortest_path_time = [
    0.0001816325989470361,
    9.98444068131845e-05,
    0.00010314297804937059,
    9.315227361778004e-05,
    0.00010674529411563383,
    0.0001315458662461599,
    0.00016310538744279524,
    0.0002340786679077411,
    0.0002522347442001332,
    0.0002866096366147742,
    0.00018673037117540294,
    0.00013640639061974713,
    0.0001438402219325946,
    0.00017637634259792681,
    0.00021943277954148064,
    0.0002749211339791343,
    0.0002959456248719881,
    0.0003638218218732346,
    0.0004466555085700011,
    0.0005772407225579512,
    0.0007323286486414111,
    0.0010089770994718928,
    0.0012981793356418043,
    0.001791237029842535,
    0.002563295694528793,
    0.004189014809259555,
    0.005954010065861348,
    0.008695448982993004,
    0.012835927521565857,
    0.017268698579871594,
    0.024985280024607686,
    0.03461623322590559,
    0.05129422963865612,
    0.07198120145005449,
    0.09598416210791373,
    0.1460275752746022,
    0.20375434276660792,
    0.28125345857751577,
    0.40580179710119485,
    0.5749426987981446,
    0.8431022360068403,
    1.275676353527004,
    2.099528000240664,
    4.017045658802664,
    8.074045589591394,
    14.734503975266774,
    26.300216717745737,
    45.553041396786284,
    56.062061856861895,
    93.37633952113721,
]


construct_time = [
    2.9334998544072732e-05,
    9.21700120670721e-06,
    8.686001820024103e-06,
    6.081001629354432e-06,
    9.428000339539722e-06,
    8.356000762432814e-06,
    1.3114000466885045e-05,
    1.586900179972872e-05,
    1.568999869050458e-05,
    2.3515000066254288e-05,
    3.523700070218183e-05,
    2.916500307037495e-05,
    3.5266002669231966e-05,
    5.023500125389546e-05,
    5.661699833581224e-05,
    7.175400241976604e-05,
    9.305500134360045e-05,
    0.00011974500012001954,
    0.00012907199925393797,
    0.00014997099788160995,
    0.00020221899831085466,
    0.0001952559978235513,
    0.0002698159987630788,
    0.00029770800028927624,
    0.00035213099909015,
    0.000412302997574443,
    0.0006470039988926146,
    0.0007498069971916266,
    0.000796112999523757,
    0.0011922269986825995,
    0.0019077690012636594,
    0.001406038001732668,
    0.0025885459981509484,
    0.004142970999964746,
    0.004299454998545116,
    0.004899420997389825,
    0.0062863719977031,
    0.007634051002241904,
    0.009094950997678097,
    0.012453269999241456,
    0.01384793599936529,
    0.01622075799969025,
    0.02167799399830983,
    0.021813879000546876,
    0.02899953800078947,
    0.04162084400013555,
    0.06309025700102211,
    0.06207487199935713,
    0.0711051519974717,
    0.11987469399900874,
]
num_nodes = [
    10,
    12,
    15,
    18,
    23,
    28,
    35,
    43,
    54,
    67,
    82,
    102,
    126,
    156,
    193,
    238,
    294,
    364,
    449,
    555,
    686,
    848,
    1048,
    1294,
    1599,
    1976,
    2442,
    3017,
    3727,
    4605,
    5689,
    7029,
    8685,
    10730,
    13257,
    16378,
    20235,
    25001,
    30888,
    38162,
    47148,
    58251,
    71968,
    88915,
    109854,
    135722,
    167683,
    207169,
    255954,
    316227,
]


plt.loglog(num_nodes, shortest_path_time)
plt.ylabel("Time (sec.)")
plt.xlabel("Number of nodes")
plt.title("Time to compute all pairs of shortest paths with Dijkstra's Algorithm")
plt.tight_layout()
plt.savefig("shortest_path.png", dpi=900)

plt.figure()
plt.semilogx(num_nodes, construct_time)
plt.title("Time to construct a random Barab√°si Albert graph")
plt.ylabel("Time (sec.)")
plt.xlabel("Number of nodes")
plt.tight_layout()
plt.savefig("albert-graph_time.png", dpi=900)
